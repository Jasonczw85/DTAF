[OARv2_ext_rel_linux_x86_gnu]

# Fake option here, any input value
p4_repo = //kits/licensing/Projects/dolby_digital_plus/ddplus_impl_dev_kit/main/rel/20130718_Dolby_Digital_Plus_Decoder_Imp_v4.4_rc3/External...

# CIDK Source
zip_packages = OARv2_ext_rel_linux_x86_gnu.zip

# Path to Zip packages storage
zip_repos = /mnt/DI_TEST/Source/ITAF_TEST/OAR/itaf_release

# Build frontend path
build_area = Object_Audio_Renderer_Imp/Test_Tools/oar_test/make/oar

# Build frontend
build_platform = linux_x86_gnu

# Build tool, make/msvs
build_tool = make

# build target
executable = model_risc16x32_dlb_profile;model_q31accu_release;model_q31accu_dlb_struct_debug;generic_risc16x32_dlb_profile;model_float32_dlb_profile;model_float32_debug;generic_risc16x32_release;model_risc16x32_debug;generic_float32_release;model_q31accu_debug;generic_float32_dlb_profile;model_float32_dlb_struct_debug;model_float32_release;generic_risc16x32_debug;model_q31accu_dlb_profile;model_risc16x32_dlb_struct_debug;model_risc16x32_release;generic_float32_debug

# Path to executing itaf test
exec_dir = Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend

# Command to executing itaf
exec_cmd = chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/itaf_plugins/bin/*; chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/oar_test/test/itaf/oar/bin/*; python Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend/run.py -s 0 -e ${each_backend},${each_flavor}

di_folder = Dolby_Intrinsics_Imp/Source_Code

modify_cmd = ls

dut_exec = 

change_list = 

[OARv2_ext_rel_linux_amd64_gnu]

# Fake option here, any input value
p4_repo = //kits/licensing/Projects/dolby_digital_plus/ddplus_impl_dev_kit/main/rel/20130718_Dolby_Digital_Plus_Decoder_Imp_v4.4_rc3/External...

# CIDK Source
zip_packages = OARv2_ext_rel_linux_amd64_gnu.zip

# Path to Zip packages storage
zip_repos = /mnt/DI_TEST/Source/ITAF_TEST/OAR/itaf_release

# Build frontend path
build_area = Object_Audio_Renderer_Imp/Test_Tools/oar_test/make/oar

# Build frontend
build_platform = linux_amd64_gnu

# Build tool, make/msvs
build_tool = make

# build target
executable = generic_float32_release;model_risc16x32_debug;generic_risc16x32_release;model_float32_debug;model_float32_dlb_profile;model_risc16x32_dlb_struct_debug;model_q31accu_release;model_q31accu_dlb_struct_debug;model_risc16x32_dlb_profile;generic_float32_debug;model_risc16x32_release;model_q31accu_dlb_profile;generic_risc16x32_debug;model_float32_dlb_struct_debug;model_float32_release;generic_risc16x32_dlb_profile;generic_float32_dlb_profile;model_q31accu_debug

# Path to executing itaf test
exec_dir = Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend

# Command to executing itaf
exec_cmd = chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/itaf_plugins/bin/*; chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/oar_test/test/itaf/oar/bin/*; python Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend/run.py -s 0 -e ${each_backend},${each_flavor}

di_folder = Dolby_Intrinsics_Imp/Source_Code

modify_cmd = ls

dut_exec = 

change_list = 

[OARv2_ext_rel_linux_cortex_a9_vfp_neon_rvct_cslibc]

# Fake option here, any input value
p4_repo = //kits/licensing/Projects/dolby_digital_plus/ddplus_impl_dev_kit/main/rel/20130718_Dolby_Digital_Plus_Decoder_Imp_v4.4_rc3/External...

# CIDK Source
zip_packages = OARv2_ext_rel_linux_cortex_a9_vfp_neon_rvct_cslibc.zip

# Path to Zip packages storage
zip_repos = /mnt/DI_TEST/Source/ITAF_TEST/OAR/itaf_release

# Build frontend path
build_area = Object_Audio_Renderer_Imp/Test_Tools/oar_test/make/oar

# Build frontend
build_platform = linux_cortex_a9_vfp_neon_rvct_cslibc

# Build tool, make/msvs
build_tool = make

# build target
executable = armv7float_neon_release;armv7int_neon_dlb_profile;armv7int_neon_release;armv7int_neon_debug;armv7float_neon_debug;armv7float_neon_dlb_profile

# Path to executing itaf test
exec_dir = Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend

# Command to executing itaf
exec_cmd = ssh ${board_username}@${board_ip} "rm -rf ~/OARv2_ext_rel_linux_cortex_a9_vfp_neon_rvct_cslibc"; ssh ${board_username}@${board_ip} "mkdir -p ~/OARv2_ext_rel_linux_cortex_a9_vfp_neon_rvct_cslibc"; export ITAF_SSH_CONNECTION=${board_username}@${board_ip}; export ITAF_SSH_REMOTE_DIR=/root/OARv2_ext_rel_linux_cortex_a9_vfp_neon_rvct_cslibc; export ITAF_SSH_REMOTE_EXE=/root/OARv2_ext_rel_linux_cortex_a9_vfp_neon_rvct_cslibc/${each_executable}; scp ${each_build_area}/${each_executable} ${board_username}@${board_ip}:/root/OARv2_ext_rel_linux_cortex_a9_vfp_neon_rvct_cslibc; chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/itaf_plugins/bin/*; chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/oar_test/test/itaf/oar/bin/*; python Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend/run.py -s 4 -e ssh

di_folder = Dolby_Intrinsics_Imp/Source_Code

modify_cmd = ls

dut_exec = 

change_list = 

[OARv2_ext_rel_linuxhf_cortex_a9_vfp_neon_gnu]

# Fake option here, any input value
p4_repo = //kits/licensing/Projects/dolby_digital_plus/ddplus_impl_dev_kit/main/rel/20130718_Dolby_Digital_Plus_Decoder_Imp_v4.4_rc3/External...

# CIDK Source
zip_packages = OARv2_ext_rel_linuxhf_cortex_a9_vfp_neon_gnu.zip

# Path to Zip packages storage
zip_repos = /mnt/DI_TEST/Source/ITAF_TEST/OAR/itaf_release

# Build frontend path
build_area = Object_Audio_Renderer_Imp/Test_Tools/oar_test/make/oar

# Build frontend
build_platform = linuxhf_cortex_a9_vfp_neon_gnu

# Build tool, make/msvs
build_tool = make

# build target
executable = armv7float_neon_dlb_profile;armv7float_neon_debug;armv7float_neon_release;armv7int_neon_dlb_profile;armv7int_neon_debug;armv7int_neon_release

# Path to executing itaf test
exec_dir = Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend

# Command to executing itaf
exec_cmd = ssh ${board_username}@${board_ip} "rm -rf ~/OARv2_ext_rel_linuxhf_cortex_a9_vfp_neon_gnu"; ssh ${board_username}@${board_ip} "mkdir -p ~/OARv2_ext_rel_linuxhf_cortex_a9_vfp_neon_gnu"; export ITAF_SSH_CONNECTION=${board_username}@${board_ip}; export ITAF_SSH_REMOTE_DIR=/root/OARv2_ext_rel_linuxhf_cortex_a9_vfp_neon_gnu; export ITAF_SSH_REMOTE_EXE=/root/OARv2_ext_rel_linuxhf_cortex_a9_vfp_neon_gnu/${each_executable}; scp ${each_build_area}/${each_executable} ${board_username}@${board_ip}:/root/OARv2_ext_rel_linuxhf_cortex_a9_vfp_neon_gnu; chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/itaf_plugins/bin/*; chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/oar_test/test/itaf/oar/bin/*; python Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend/run.py -s 4 -e ssh

di_folder = Dolby_Intrinsics_Imp/Source_Code

modify_cmd = ls

dut_exec = 

change_list = 

[OARv2_ext_rel_linux_arm64_gnu]

# Fake option here, any input value
p4_repo = //kits/licensing/Projects/dolby_digital_plus/ddplus_impl_dev_kit/main/rel/20130718_Dolby_Digital_Plus_Decoder_Imp_v4.4_rc3/External...

# CIDK Source
zip_packages = OARv2_ext_rel_linux_arm64_gnu.zip

# Path to Zip packages storage
zip_repos = /mnt/DI_TEST/Source/ITAF_TEST/OAR/itaf_release

# Build frontend path
build_area = Object_Audio_Renderer_Imp/Test_Tools/oar_test/make/oar

# Build frontend
build_platform = linux_arm64_gnu

# Build tool, make/msvs
build_tool = make

# build target
executable = generic_risc16x32_debug;generic_float32_debug;generic_risc16x32_dlb_profile;armv8float_neon_release;generic_risc16x32_release;armv8float_neon_dlb_profile;generic_float32_release;armv8float_neon_debug;generic_float32_dlb_profile

# Path to executing itaf test
exec_dir = Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend

# Command to executing itaf
exec_cmd = ssh ${board_username}@${board_ip} "rm -rf ~/OARv2_ext_rel_linux_arm64_gnu"; ssh ${board_username}@${board_ip} "mkdir -p ~/OARv2_ext_rel_linux_arm64_gnu"; export ITAF_SSH_CONNECTION=${board_username}@${board_ip}; export ITAF_SSH_REMOTE_DIR=/home/linaro/OARv2_ext_rel_linux_arm64_gnu; export ITAF_SSH_REMOTE_EXE=/home/linaro/OARv2_ext_rel_linux_arm64_gnu/${each_executable}; scp ${each_build_area}/${each_executable} ${board_username}@${board_ip}:/home/linaro/OARv2_ext_rel_linux_arm64_gnu; chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/itaf_plugins/bin/*; chmod +x -R Object_Audio_Renderer_Imp/Test_Tools/oar_test/test/itaf/oar/bin/*; python Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend/run.py -s 4 -e ssh

di_folder = Dolby_Intrinsics_Imp/Source_Code

modify_cmd = ls

dut_exec = 

change_list = 

[OARv2_ext_rel_windows_amd64_msvs]

# Fake option here, any input value
p4_repo = //kits/licensing/Projects/dolby_digital_plus/ddplus_impl_dev_kit/main/rel/20130718_Dolby_Digital_Plus_Decoder_Imp_v4.4_rc3/External...

# CIDK Source
zip_packages = OARv2_ext_rel_windows_amd64_msvs.zip

# Path to Zip packages storage
zip_repos = Z:\Source\ITAF_TEST\OAR\itaf_release

# Build frontend path
build_area = Object_Audio_Renderer_Imp/Test_Tools/oar_test/make/oar

# Build frontend
build_platform = windows_amd64_msvs

# windows msvs compiler version
version = 2015

# Build tool, make/msvs
build_tool = msvs2015

# build target
executable = model_q31accu_dlb_profile|x64;model_risc16x32_release|x64;model_risc16x32_dlb_struct_debug|x64;model_risc16x32_debug|x64;model_float32_dlb_profile|x64;generic_float32_dlb_profile|x64;model_q31accu_debug|x64;generic_risc16x32_dlb_profile|x64;generic_risc16x32_release|x64;model_q31accu_dlb_struct_debug|x64;generic_risc16x32_debug|x64;model_float32_debug|x64;generic_float32_release|x64;model_float32_release|x64;generic_float32_debug|x64;model_q31accu_release|x64;model_risc16x32_dlb_profile|x64;model_float32_dlb_struct_debug|x64

# Path to executing itaf test
exec_dir = Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend

# Command to executing itaf
exec_cmd = python Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend/run.py -s 0 -e %%each_backend%%,%%each_flavor%%

cmd_path = VS2015/oar.exe

di_folder = Dolby_Intrinsics_Imp/Source_Code

modify_cmd = echo

dut_exec = 

change_list = 

[OARv2_ext_rel_windows_x86_msvs2010]

# Fake option here, any input value
p4_repo = //kits/licensing/Projects/dolby_digital_plus/ddplus_impl_dev_kit/main/rel/20130718_Dolby_Digital_Plus_Decoder_Imp_v4.4_rc3/External...

# CIDK Source
zip_packages = OARv2_ext_rel_windows_x86_msvs2010.zip

# Path to Zip packages storage
zip_repos = Z:\Source\ITAF_TEST\OAR\itaf_release

# Build frontend path
build_area = Object_Audio_Renderer_Imp/Test_Tools/oar_test/make/oar

# Build frontend
build_platform = windows_x86_msvs

# windows msvs compiler version
version = 2010

# Build tool, make/msvs
build_tool = msvs2010

# build target
executable = generic_risc16x32_debug|Win32;model_q31accu_dlb_struct_debug|Win32;generic_float32_debug|Win32;model_float32_dlb_profile|Win32;model_q31accu_dlb_profile|Win32;model_float32_debug|Win32;generic_float32_release|Win32;model_float32_release|Win32;model_q31accu_release|Win32;generic_risc16x32_dlb_profile|Win32;model_float32_dlb_struct_debug|Win32;model_risc16x32_dlb_profile|Win32;model_risc16x32_release|Win32;model_risc16x32_debug|Win32;generic_risc16x32_release|Win32;model_risc16x32_dlb_struct_debug|Win32;model_q31accu_debug|Win32;generic_float32_dlb_profile|Win32

# Path to executing itaf test
exec_dir = Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend

# Command to executing itaf
exec_cmd = python Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend/run.py -s 0 -e %%each_backend%%,%%each_flavor%%

cmd_path = VS2010/oar.exe

di_folder = Dolby_Intrinsics_Imp/Source_Code

modify_cmd = echo

dut_exec = 

change_list = 

[OARv2_ext_rel_windows_x86_msvs2015]

# Fake option here, any input value
p4_repo = //kits/licensing/Projects/dolby_digital_plus/ddplus_impl_dev_kit/main/rel/20130718_Dolby_Digital_Plus_Decoder_Imp_v4.4_rc3/External...

# CIDK Source
zip_packages = OARv2_ext_rel_windows_x86_msvs2015.zip

# Path to Zip packages storage
zip_repos = Z:\Source\ITAF_TEST\OAR\itaf_release

# Build frontend path
build_area = Object_Audio_Renderer_Imp/Test_Tools/oar_test/make/oar

# Build frontend
build_platform = windows_x86_msvs

# windows msvs compiler version
version = 2015

# Build tool, make/msvs
build_tool = msvs2015

# build target
executable = generic_risc16x32_release|Win32;model_float32_dlb_struct_debug|Win32;model_q31accu_dlb_struct_debug|Win32;model_q31accu_dlb_profile|Win32;model_q31accu_release|Win32;generic_float32_release|Win32;generic_risc16x32_dlb_profile|Win32;model_risc16x32_release|Win32;generic_float32_dlb_profile|Win32;model_q31accu_debug|Win32;generic_float32_debug|Win32;model_float32_dlb_profile|Win32;model_float32_debug|Win32;model_risc16x32_dlb_struct_debug|Win32;generic_risc16x32_debug|Win32;model_risc16x32_debug|Win32;model_risc16x32_dlb_profile|Win32;model_float32_release|Win32

# Path to executing itaf test
exec_dir = Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend

# Command to executing itaf
exec_cmd = python Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend/run.py -s 0 -e %%each_backend%%,%%each_flavor%%

cmd_path = VS2015/oar.exe

di_folder = Dolby_Intrinsics_Imp/Source_Code

modify_cmd = echo

dut_exec = 

change_list = 

[OARv2_ext_rel_osx_amd64_clang]

# Fake option here, any input value
p4_repo = //kits/licensing/Projects/dolby_digital_plus/ddplus_impl_dev_kit/main/rel/20130718_Dolby_Digital_Plus_Decoder_Imp_v4.4_rc3/External...

# CIDK Source
zip_packages = OARv2_ext_rel_osx_amd64_clang.zip

# Path to Zip packages storage
zip_repos = /Users/administrator/DI_TEST/Source/ITAF_TEST/OAR/itaf_release

# Build frontend path
build_area = Object_Audio_Renderer_Imp/Test_Tools/oar_test/make/oar

# Build frontend
build_platform = osx_amd64_clang

# Build tool, make/msvs
build_tool = make

# build target
executable = generic_risc16x32_dlb_profile;model_float32_release;model_risc16x32_debug;generic_float32_debug;generic_risc16x32_release;model_q31accu_debug;model_risc16x32_dlb_profile;generic_float32_dlb_profile;model_float32_debug;model_q31accu_dlb_profile;model_risc16x32_dlb_struct_debug;generic_float32_release;model_float32_dlb_profile;model_q31accu_dlb_struct_debug;model_risc16x32_release;generic_risc16x32_debug;model_float32_dlb_struct_debug;model_q31accu_release


# Path to executing itaf test
exec_dir = Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend

# Command to executing itaf
exec_cmd = chmod -R +x Object_Audio_Renderer_Imp/Test_Tools/itaf_plugins/bin/*; chmod -R +x Object_Audio_Renderer_Imp/Test_Tools/oar_test/test/itaf/oar/bin/*; python Object_Audio_Renderer_Imp/Test_Tools/itaf/frontend/run.py -s 0 -e ${each_backend},${each_flavor}

di_folder = Dolby_Intrinsics_Imp/Source_Code

modify_cmd = ls

dut_exec = 

change_list = 

